<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mj.report.dao.RoleDao" >
  <resultMap id="BaseResultMap" type="com.mj.report.model.Role" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_description" property="roleDescription" jdbcType="VARCHAR" />
    <result column="menu_ids" property="menuIds" jdbcType="VARCHAR" />
    <result column="available" property="available" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_name, role_description, menu_ids, available
  </sql>
  
  <!-- 查询用户列表（可选条件查询） -->
  <select id="findAllRole" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from role 
  </select>
  
  
  <!-- 根据角色名查询 -->
  <select id="selectByRoleName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from role
    where role_name = #{uname,jdbcType=VARCHAR}
  </select>
  
  <!-- 根据角色名\id查询 -->
  <select id="selectByIdAndName" resultMap="BaseResultMap" parameterType="map" >
    select role_id  from role
    where role_name = #{1} and role_id = #{0}
  </select>
  
  <!-- 根据id查询 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mj.report.model.Role" >
    insert into role ( role_name, role_description, 
      menu_ids, available)
    values ( #{roleName,jdbcType=VARCHAR}, #{roleDescription,jdbcType=VARCHAR}, 
      #{menuIds,jdbcType=VARCHAR}, #{available,jdbcType=INTEGER})
  </insert>
  
  <insert id="insertSelective" parameterType="com.mj.report.model.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleDescription != null" >
        role_description,
      </if>
      <if test="menuIds != null" >
        menu_ids,
      </if>
      <if test="available != null" >
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDescription != null" >
        #{roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="menuIds != null" >
        #{menuIds,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        #{available,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <!-- 修改角色 -->
  <update id="updateByPrimaryKeySelective" parameterType="com.mj.report.model.Role" >
    update role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDescription != null" >
        role_description = #{roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="menuIds != null" >
        menu_ids = #{menuIds,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mj.report.model.Role" >
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_description = #{roleDescription,jdbcType=VARCHAR},
      menu_ids = #{menuIds,jdbcType=VARCHAR},
      available = #{available,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>