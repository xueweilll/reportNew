<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mj.report.dao.UserDao">
	<resultMap id="BaseResultMap" type="com.mj.report.model.User">
		<id column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="mobile_number" property="mobileNumber"
			jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<result column="register_time" property="registerTime"
			jdbcType="TIMESTAMP" />
		<result column="latest_login_time" property="latestLoginTime"
			jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="comment" property="comment" jdbcType="VARCHAR" />
		<result column="head_url" property="headUrl" jdbcType="VARCHAR" />
		<result column="role_id" property="roleId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		user_id, username, name,mobile_number, email, password, salt,
		register_time,
		latest_login_time, status, comment,role_id,head_url
	</sql>

	<!-- 根据用户id，获取角色名称 -->
	<resultMap type="com.mj.report.model.User" id="UserResultMap">
		<id property="userId" column="user_id" />
		<result property="username" column="username" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="mobile_number" property="mobileNumber"
			jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<result column="register_time" property="registerTime"
			jdbcType="TIMESTAMP" />
		<result column="latest_login_time" property="latestLoginTime"
			jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="comment" property="comment" jdbcType="VARCHAR" />
		<result column="role_id" property="roleId" jdbcType="INTEGER" />
		<association property="roleName" javaType="string">
			<result property="roleName" column="role_name" />
		</association>
	</resultMap>

	<!-- 查询用户列表-分页-条件查询 -->
	<select id="findAllUser" resultMap="UserResultMap">
		select * from (select top  (#{end}) * from 
		(select row_number() over(order by u.user_id) as num, 
		u.username, u.user_id, u.name, u.mobile_number,
		u.email, u.password, u.salt, u.register_time,
		u.latest_login_time, u.status, u.comment,u.role_id,r.role_name  
		from user_info as u  LEFT JOIN role as r on  r.role_id = u.role_id )A 
		 where num > (#{notIn}) 
		<if test="userName != null and userName !='' ">
			and A.username like '%${userName}%'
		</if>
		<if test="mobileNum != null and mobileNum !='' ">
			and A.mobile_number like '%${mobileNum}%'
		</if>
		<if test="startDate != null and startDate !=''">
			<![CDATA[ and CONVERT(varchar(100), A.latest_login_time, 23)>=  CONVERT(varchar(100), #{startDate}, 23) ]]>
		</if>
		<if test="endDate != null and endDate !=''">
			<![CDATA[ and CONVERT(varchar(100), A.latest_login_time, 23)<=  CONVERT(varchar(100), #{endDate}, 23)  ]]> 
		</if>
		) as B
		order by B.register_time desc
	</select>
	<!-- 查询用户列表 -->
	<select id="selectUserList" resultMap="UserResultMap">
		select u.username, u.user_id, u.name,  u.mobile_number,
		u.email, u.password, u.salt, u.register_time,
		u.latest_login_time, u.status, u.comment,u.role_id,r.role_name
		from user_info as u left join role as r on r.role_id = u.role_id 
		order by u.register_time desc
	</select>
	
	<!-- 查询用户数 -->
	 <select id="countUser" resultType="Integer" >
	    select 
	    count(status)
	    from user_info 
	    where 1=1
		<if test="userName != null and userName !='' ">
			and username like '%${userName}%'
		</if>
		<if test="mobileNum != null and mobileNum !='' ">
			and mobile_number like '%${mobileNum}%'
		</if>
		<if test="startDate != null and startDate !=''">
			<![CDATA[ and CONVERT(varchar(100), latest_login_time, 23)>=  CONVERT(varchar(100), #{startDate}, 23) ]]>
		</if>
		<if test="endDate != null and endDate !=''">
			<![CDATA[ and CONVERT(varchar(100), latest_login_time, 23)<=  CONVERT(varchar(100), #{endDate}, 23)  ]]> 
		</if>
	 </select>

	<!-- 冻结，解冻账户 -->
	<update id="lockUserStatus" parameterType="map">
		update user_info
		set status = #{0}
		where user_id = #{1}
	</update>

	<!-- 根据用户名查询 -->
	<select id="selectByUserName" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user_info
		where username = #{uname,jdbcType=VARCHAR}
	</select>
	<!-- 根据用户名学号手机号查询 -->
	<select id="selectByMobile_Name_Stu" resultType="Integer" parameterType="java.lang.String">
		select
		count(status)
		from user_info
		<if test="name != null">
			where username =#{name}
		</if>
		<if test="tel != null">
			where mobile_number =#{tel}
		</if>
	</select>
	<!-- 根据用户名或学号或手机号 -->
	<select id="userToLogin" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select *
		from user_info
		where username = #{name_num_tel,jdbcType=VARCHAR}  or mobile_number =
		#{name_num_tel,jdbcType=VARCHAR} 
	</select>

	<!-- 根据用户名\id查询 -->
	<select id="selectByIdAndName" resultMap="BaseResultMap"
		parameterType="map">
		select user_id from user_info
		where username = #{1} and user_id = #{0}
	</select>

	<!-- 根据id查询 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user_info
		where user_id = #{id,jdbcType=INTEGER}
	</select>

	<!-- 删除 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user_info
		where user_id = #{id,jdbcType=INTEGER}
	</delete>
	<!-- 删除用户根据角色id -->
	<delete id="deleteByRoleId" parameterType="java.lang.Integer">
		delete from user_info
		where role_id = #{roleid,jdbcType=INTEGER}
	</delete>

	<!-- 用户插入 -->
	<insert id="insert" parameterType="com.mj.report.model.User">
		insert into user_info ( username, name,
		 mobile_number, email,
		password, salt, register_time,
		latest_login_time, status, comment,role_id
		)
		values (#{username,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		 #{mobileNumber,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{registerTime,jdbcType=TIMESTAMP},
		#{latestLoginTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR},
		#{comment,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}
		)
	</insert>

	
	<!-- 批量插入 -->
	<insert id="insertBatch" parameterType="java.util.List">
		insert into user_info ( username, name,
		mobile_number, email,
		password, salt, register_time,
		latest_login_time, status, comment,role_id
		)
		values 
			<foreach collection="list" item="item" index="index" separator="," >
				(#{item.username,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR},
				 #{item.mobileNumber,jdbcType=VARCHAR},
				#{item.email,jdbcType=VARCHAR},
				#{item.password,jdbcType=VARCHAR}, #{item.salt,jdbcType=VARCHAR}, #{item.registerTime,jdbcType=TIMESTAMP},
				#{item.latestLoginTime,jdbcType=TIMESTAMP}, #{item.status,jdbcType=VARCHAR},
				#{item.comment,jdbcType=VARCHAR}, #{item.roleId,jdbcType=INTEGER})
			</foreach>
	</insert>
	
	<insert id="insertSelective" parameterType="com.mj.report.model.User">
		insert into user_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="username != null">
				username,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="mobileNumber != null">
				mobile_number,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="registerTime != null">
				register_time,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="comment != null">
				comment,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="mobileNumber != null">
				#{mobileNumber,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="registerTime != null">
				#{registerTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="comment != null">
				#{comment,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<!-- 用户修改 -->
	<update id="updateByPrimaryKeySelective" parameterType="com.mj.report.model.User">
		update user_info
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="mobileNumber != null">
				mobile_number = #{mobileNumber,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="comment != null">
				comment = #{comment,jdbcType=VARCHAR},
			</if>
			<if test="headUrl != null">
				head_url = #{headUrl,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="latestLoginTime != null">
				latest_login_time = #{latestLoginTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where user_id = #{userId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.mj.report.model.User">
		update user_info
		set username = #{username,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		mobile_number = #{mobileNumber,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=VARCHAR},
		register_time = #{registerTime,jdbcType=TIMESTAMP},
		latest_login_time = #{latestLoginTime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=VARCHAR},
		comment = #{comment,jdbcType=VARCHAR}
		where user_id = #{userId,jdbcType=BIGINT}
	</update>

</mapper>