<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop   
          				http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        				http://www.springframework.org/schema/task  
    					http://www.springframework.org/schema/task/spring-task-4.0.xsd     
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
    <task:annotation-driven/>                     
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.mj.report" >
	<!-- 将Controller的注解排除掉  -->
 		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />  
	</context:component-scan>
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	
	 <!-- 引入jdbc配置文件 -->    
<!--     <context:property-placeholder location="classpath:jdbc.properties" /> -->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath*:com/mj/report/mapping/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mj.report.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 事务相关配置 -->
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置事务属性- 定义事务通知 -->
<!--   	<tx:advice id="txAdvice" transaction-manager="transactionManager">   -->
	 <!-- 定义方法的过滤规则 -->  
<!--   	  <tx:attributes>   -->
	  	 <!-- 所有方法都使用事务 -->  
<!--   	    <tx:method name="bespeak" propagation="REQUIRED" />  -->
<!--   	    <tx:method name="useSeat" propagation="REQUIRED" />  -->
<!--   	    <tx:method name="remove*" propagation="REQUIRED" />  -->
<!--   	    <tx:method name="leave*" propagation="REQUIRED" />  -->
	     <!-- 定义所有get开头的方法都是只读的 -readOnly 指定事务是否为只读，表示这个事务只读取数据但不更新数据-->  
<!--    	    <tx:method name="select*" read-only="true"/>   -->
<!--    	    <tx:method name="find*" read-only="true"/>   -->
<!--   	  </tx:attributes>   -->
<!--   	</tx:advice>   -->
	<!-- 配置事务的切点,并把事务切点和事务属性不关联起来 -->
<!--       <aop:config>   -->
    	 <!-- 定义一个切入点 -->  
<!--          <aop:pointcut expression="execution(* com.mj.report.service.impl.BespeakServiceImpl.*(..))" id="txPointCut"/>   -->
        <!-- 对切入点和事务的通知，进行适配 -->
<!--           <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>   -->
<!--       </aop:config>   -->
	<!-- ehcache配置 -->
	<import resource="classpath:spring-cache.xml"/>
	<!-- 引入shiro相关配置 -->
	<import resource="classpath:spring-shiro.xml"/>
</beans>